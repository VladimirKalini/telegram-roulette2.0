version: '3.8'

services:
  # 1. Сервис Базы Данных
  db:
    image: postgres:15
    container_name: roulette_db
    restart: always
    environment:
      POSTGRES_DB: roulette_game
      POSTGRES_USER: roulette_user
      POSTGRES_PASSWORD: my_super_secret_password # Замените на надежный пароль
# volumes:
    #   - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Используем порт 5433 чтобы не конфликтовать с локальным PostgreSQL

  # 2. Сервис Бэкенда
  backend:
    container_name: roulette_backend
    build:
      context: ./backend # Указываем путь к папке бэкенда
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db # Бэкенд запустится только после старта базы данных
    environment:
      DB_USER: roulette_user
      DB_HOST: db # Вместо localhost используем имя сервиса
      DB_DATABASE: roulette_game
      DB_PASSWORD: my_super_secret_password # Пароль должен совпадать с тем, что у db
      DB_PORT: 5432
      PORT: 3000
    ports:
      - "3000:3000"

  # 3. Сервис Фронтенда и Веб-сервера Nginx
  nginx:
    container_name: roulette_nginx
    build:
      context: . # Собираем из корневой папки
      dockerfile: Dockerfile.nginx
    restart: always
    ports:
      - "80:80"   # HTTP порт
      - "443:443" # HTTPS порт
    volumes:
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    depends_on:
      - backend

  # 4. Сервис для получения SSL сертификатов
  certbot:
    image: certbot/certbot:latest
    container_name: roulette_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}

# volumes:
  #   postgres_data: 